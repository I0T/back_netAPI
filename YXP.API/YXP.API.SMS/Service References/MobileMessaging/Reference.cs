//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YXP.API.SMS.MobileMessaging {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dealer.ucar.cn/", ConfigurationName="MobileMessaging.MobileMessagingServicesSoap")]
    public interface MobileMessagingServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/SmsSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long SmsSend(int appId, string message, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/SmsSend", ReplyAction="*")]
        System.Threading.Tasks.Task<long> SmsSendAsync(int appId, string message, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/CYMSmsSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long CYMSmsSend(int appId, string message, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/CYMSmsSend", ReplyAction="*")]
        System.Threading.Tasks.Task<long> CYMSmsSendAsync(int appId, string message, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/MmsSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long MmsSend(int appId, string subject, string encodedSlides, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/MmsSend", ReplyAction="*")]
        System.Threading.Tasks.Task<long> MmsSendAsync(int appId, string subject, string encodedSlides, string to, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/GetSmsMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSmsMessage(int appId, long maxId, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dealer.ucar.cn/GetSmsMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSmsMessageAsync(int appId, long maxId, string sign);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MobileMessagingServicesSoapChannel : YXP.API.SMS.MobileMessaging.MobileMessagingServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MobileMessagingServicesSoapClient : System.ServiceModel.ClientBase<YXP.API.SMS.MobileMessaging.MobileMessagingServicesSoap>, YXP.API.SMS.MobileMessaging.MobileMessagingServicesSoap {
        
        public MobileMessagingServicesSoapClient() {
        }
        
        public MobileMessagingServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MobileMessagingServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileMessagingServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileMessagingServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long SmsSend(int appId, string message, string to, string sign) {
            return base.Channel.SmsSend(appId, message, to, sign);
        }
        
        public System.Threading.Tasks.Task<long> SmsSendAsync(int appId, string message, string to, string sign) {
            return base.Channel.SmsSendAsync(appId, message, to, sign);
        }
        
        public long CYMSmsSend(int appId, string message, string to, string sign) {
            return base.Channel.CYMSmsSend(appId, message, to, sign);
        }
        
        public System.Threading.Tasks.Task<long> CYMSmsSendAsync(int appId, string message, string to, string sign) {
            return base.Channel.CYMSmsSendAsync(appId, message, to, sign);
        }
        
        public long MmsSend(int appId, string subject, string encodedSlides, string to, string sign) {
            return base.Channel.MmsSend(appId, subject, encodedSlides, to, sign);
        }
        
        public System.Threading.Tasks.Task<long> MmsSendAsync(int appId, string subject, string encodedSlides, string to, string sign) {
            return base.Channel.MmsSendAsync(appId, subject, encodedSlides, to, sign);
        }
        
        public System.Data.DataSet GetSmsMessage(int appId, long maxId, string sign) {
            return base.Channel.GetSmsMessage(appId, maxId, sign);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSmsMessageAsync(int appId, long maxId, string sign) {
            return base.Channel.GetSmsMessageAsync(appId, maxId, sign);
        }
    }
}
